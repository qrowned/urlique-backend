name: Deploy Master
on:
  push:
    branches: [ master ]
jobs:
  compile:
    runs-on: ubuntu-latest
    name: Java ${{ matrix.java }} compile
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2
      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-package: jdk
          java-version: '17'
      - name: Compile the Project
        run: mvn -B compile
  build:
    runs-on: ubuntu-latest
    needs: compile
    name: Build the Maven Project
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'
          java-package: jdk
      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build and test project
        run: mvn -B verify
      - name: Upload Server artifacts
        uses: actions/upload-artifact@v2
        with:
          name: target-files
          path: urlique-server/target
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/download-artifact@master
        with:
          name: target-files
          path: urlique-server/target
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to private registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./urlique-server
          file: ./urlique-server/docker/prod/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: '${{ secrets.REGISTRY_URL }}/urlique/server:latest'
          cache-from: 'type=registry,ref=${{ secrets.REGISTRY_URL }}/urlique/server:buildcache'
          cache-to: 'type=registry,ref=${{ secrets.REGISTRY_URL }}/urlique/server:buildcache,mode=max'